export {};

type POINT = [number, number];
type POINT_STR = `${number},${number}`;

const point2Str = (x: number, y: number): POINT_STR => `${x},${y}`;
const str2Point = (s: POINT_STR): POINT => s.split(',').map((x) => +x) as POINT;

const parse = (input: string[]): POINT[] => {
  const points: Record<POINT_STR, boolean> = {};
  for (const line of input) {
    let from: POINT;
    for (const c of line.split(' -> ')) {
      const to = str2Point(c as POINT_STR);
      if (from) {
        const dx = Math.sign(to[0] - from[0]);
        const dy = Math.sign(to[1] - from[1]);
        let [x, y] = from;
        if (dx) {
          for (let lx = to[0] + dx; x !== lx; x += dx) points[point2Str(x, y)] = true;
        } else {
          for (let ly = to[1] + dy; y !== ly; y += dy) points[point2Str(x, y)] = true;
        }
      }
      from = to;
    }
  }
  return (Object.keys(points) as POINT_STR[]).map(str2Point);
};

const getBounds = (p: POINT[]): [POINT, POINT] =>
  p.reduce(
    ([[x1, y1], [x2, y2]], [x, y]) => [
      [Math.min(x1, x), Math.min(y1, y)],
      [Math.max(x2, x), Math.max(y2, y)],
    ],
    [
      [+Infinity, +Infinity],
      [-Infinity, -Infinity],
    ]
  );

type CELL = '.' | '#' | 'o';
type ROW = Record<number, CELL>;
type MAP = Record<number, ROW>;

const buildMap = ([[x1, y1], [x2, y2]]: [POINT, POINT], walls: POINT[]): MAP => {
  const wStr = new Set(walls.map(([x, y]) => point2Str(x, y)));
  const map: MAP = {};
  for (let y = y1; y <= y2; y++) {
    const line: ROW = {};
    map[y] = line;
    for (let x = x1; x <= x2; x++) {
      line[x] = wStr.has(point2Str(x, y)) ? '#' : '.';
    }
  }
  return map;
};

const displayMap = (map: MAP) => {
  console.log('');
  for (const row of Object.values(map)) console.log(Object.values(row).join(''));
};

const drop = (x: number, y: number, map: MAP, [[_x1, _y1], [_x2, y2]]: [POINT, POINT]): POINT => {
  while (true) {
    while (map[y + 1]?.[x] === '.' && y < y2) y++;
    if (y >= y2) break;
    if (map[y + 1][x - 1] === '.') x--;
    else if (map[y + 1][x + 1] === '.') x++;
    else break;
  }
  map[y][x] = 'o';
  return [x, y];
};

const part = (input: string[], alterBound: (b: [POINT, POINT]) => [POINT, POINT], isDone: (p: POINT) => boolean) => {
  const walls = parse(input);
  const bounds = alterBound(getBounds(walls));
  const map = buildMap(bounds, walls);
  let count = 0;
  while (true) {
    count++;
    const p = drop(500, 0, map, bounds);
    if (isDone(p)) {
      displayMap(map);
      break;
    }
  }
  return count;
};

const part1 = (input: string[]) => {
  let targetY: number;
  const alter = (bounds: [POINT, POINT]) => {
    bounds[0][1] = 0;
    bounds[0][0]--;
    bounds[1][0]++;
    targetY = bounds[1][1];
    return bounds;
  };
  return part(input, alter, ([, y]) => y === targetY) - 1;
};

const part2 = (input: string[]) => {
  const alter = (bounds: [POINT, POINT]) => {
    bounds[0][1] = 0;
    bounds[1][1]++;
    const height = bounds[1][1] - bounds[0][1];
    bounds[0][0] -= height;
    bounds[1][0] += height;
    return bounds;
  };
  return part(input, alter, ([, y]) => y === 0);
};

const inputSample = `498,4 -> 498,6 -> 496,6
503,4 -> 502,4 -> 502,9 -> 494,9`.split('\n');

const inputReal = `525,119 -> 525,122 -> 523,122 -> 523,125 -> 529,125 -> 529,122 -> 528,122 -> 528,119
497,69 -> 497,73 -> 489,73 -> 489,78 -> 504,78 -> 504,73 -> 501,73 -> 501,69
480,38 -> 480,31 -> 480,38 -> 482,38 -> 482,35 -> 482,38 -> 484,38 -> 484,35 -> 484,38 -> 486,38 -> 486,28 -> 486,38 -> 488,38 -> 488,36 -> 488,38
480,38 -> 480,31 -> 480,38 -> 482,38 -> 482,35 -> 482,38 -> 484,38 -> 484,35 -> 484,38 -> 486,38 -> 486,28 -> 486,38 -> 488,38 -> 488,36 -> 488,38
497,69 -> 497,73 -> 489,73 -> 489,78 -> 504,78 -> 504,73 -> 501,73 -> 501,69
487,45 -> 492,45
494,45 -> 499,45
480,38 -> 480,31 -> 480,38 -> 482,38 -> 482,35 -> 482,38 -> 484,38 -> 484,35 -> 484,38 -> 486,38 -> 486,28 -> 486,38 -> 488,38 -> 488,36 -> 488,38
480,38 -> 480,31 -> 480,38 -> 482,38 -> 482,35 -> 482,38 -> 484,38 -> 484,35 -> 484,38 -> 486,38 -> 486,28 -> 486,38 -> 488,38 -> 488,36 -> 488,38
514,60 -> 519,60
480,38 -> 480,31 -> 480,38 -> 482,38 -> 482,35 -> 482,38 -> 484,38 -> 484,35 -> 484,38 -> 486,38 -> 486,28 -> 486,38 -> 488,38 -> 488,36 -> 488,38
501,16 -> 505,16
535,160 -> 535,164 -> 529,164 -> 529,167 -> 544,167 -> 544,164 -> 539,164 -> 539,160
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
535,160 -> 535,164 -> 529,164 -> 529,167 -> 544,167 -> 544,164 -> 539,164 -> 539,160
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
501,66 -> 506,66
535,160 -> 535,164 -> 529,164 -> 529,167 -> 544,167 -> 544,164 -> 539,164 -> 539,160
497,63 -> 502,63
495,22 -> 499,22
511,89 -> 511,90 -> 524,90 -> 524,89
528,116 -> 528,114 -> 528,116 -> 530,116 -> 530,113 -> 530,116 -> 532,116 -> 532,112 -> 532,116 -> 534,116 -> 534,110 -> 534,116 -> 536,116 -> 536,113 -> 536,116
503,81 -> 503,83 -> 499,83 -> 499,87 -> 514,87 -> 514,83 -> 506,83 -> 506,81
500,60 -> 505,60
498,50 -> 498,51 -> 508,51 -> 508,50
498,50 -> 498,51 -> 508,51 -> 508,50
515,66 -> 520,66
480,38 -> 480,31 -> 480,38 -> 482,38 -> 482,35 -> 482,38 -> 484,38 -> 484,35 -> 484,38 -> 486,38 -> 486,28 -> 486,38 -> 488,38 -> 488,36 -> 488,38
510,57 -> 515,57
518,147 -> 518,140 -> 518,147 -> 520,147 -> 520,138 -> 520,147 -> 522,147 -> 522,139 -> 522,147
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
523,157 -> 535,157 -> 535,156
486,25 -> 490,25
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
528,116 -> 528,114 -> 528,116 -> 530,116 -> 530,113 -> 530,116 -> 532,116 -> 532,112 -> 532,116 -> 534,116 -> 534,110 -> 534,116 -> 536,116 -> 536,113 -> 536,116
528,116 -> 528,114 -> 528,116 -> 530,116 -> 530,113 -> 530,116 -> 532,116 -> 532,112 -> 532,116 -> 534,116 -> 534,110 -> 534,116 -> 536,116 -> 536,113 -> 536,116
480,38 -> 480,31 -> 480,38 -> 482,38 -> 482,35 -> 482,38 -> 484,38 -> 484,35 -> 484,38 -> 486,38 -> 486,28 -> 486,38 -> 488,38 -> 488,36 -> 488,38
490,43 -> 495,43
511,89 -> 511,90 -> 524,90 -> 524,89
486,41 -> 491,41
535,160 -> 535,164 -> 529,164 -> 529,167 -> 544,167 -> 544,164 -> 539,164 -> 539,160
525,119 -> 525,122 -> 523,122 -> 523,125 -> 529,125 -> 529,122 -> 528,122 -> 528,119
518,147 -> 518,140 -> 518,147 -> 520,147 -> 520,138 -> 520,147 -> 522,147 -> 522,139 -> 522,147
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
525,119 -> 525,122 -> 523,122 -> 523,125 -> 529,125 -> 529,122 -> 528,122 -> 528,119
480,38 -> 480,31 -> 480,38 -> 482,38 -> 482,35 -> 482,38 -> 484,38 -> 484,35 -> 484,38 -> 486,38 -> 486,28 -> 486,38 -> 488,38 -> 488,36 -> 488,38
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
528,116 -> 528,114 -> 528,116 -> 530,116 -> 530,113 -> 530,116 -> 532,116 -> 532,112 -> 532,116 -> 534,116 -> 534,110 -> 534,116 -> 536,116 -> 536,113 -> 536,116
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
495,16 -> 499,16
511,89 -> 511,90 -> 524,90 -> 524,89
497,69 -> 497,73 -> 489,73 -> 489,78 -> 504,78 -> 504,73 -> 501,73 -> 501,69
504,19 -> 508,19
525,119 -> 525,122 -> 523,122 -> 523,125 -> 529,125 -> 529,122 -> 528,122 -> 528,119
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
484,47 -> 489,47
518,147 -> 518,140 -> 518,147 -> 520,147 -> 520,138 -> 520,147 -> 522,147 -> 522,139 -> 522,147
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
497,69 -> 497,73 -> 489,73 -> 489,78 -> 504,78 -> 504,73 -> 501,73 -> 501,69
528,134 -> 532,134
528,116 -> 528,114 -> 528,116 -> 530,116 -> 530,113 -> 530,116 -> 532,116 -> 532,112 -> 532,116 -> 534,116 -> 534,110 -> 534,116 -> 536,116 -> 536,113 -> 536,116
522,134 -> 526,134
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
480,45 -> 485,45
498,47 -> 503,47
480,38 -> 480,31 -> 480,38 -> 482,38 -> 482,35 -> 482,38 -> 484,38 -> 484,35 -> 484,38 -> 486,38 -> 486,28 -> 486,38 -> 488,38 -> 488,36 -> 488,38
501,22 -> 505,22
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
507,22 -> 511,22
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
494,66 -> 499,66
477,47 -> 482,47
497,69 -> 497,73 -> 489,73 -> 489,78 -> 504,78 -> 504,73 -> 501,73 -> 501,69
508,66 -> 513,66
528,116 -> 528,114 -> 528,116 -> 530,116 -> 530,113 -> 530,116 -> 532,116 -> 532,112 -> 532,116 -> 534,116 -> 534,110 -> 534,116 -> 536,116 -> 536,113 -> 536,116
513,152 -> 531,152 -> 531,151
525,131 -> 529,131
503,81 -> 503,83 -> 499,83 -> 499,87 -> 514,87 -> 514,83 -> 506,83 -> 506,81
510,25 -> 514,25
528,116 -> 528,114 -> 528,116 -> 530,116 -> 530,113 -> 530,116 -> 532,116 -> 532,112 -> 532,116 -> 534,116 -> 534,110 -> 534,116 -> 536,116 -> 536,113 -> 536,116
497,69 -> 497,73 -> 489,73 -> 489,78 -> 504,78 -> 504,73 -> 501,73 -> 501,69
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
503,81 -> 503,83 -> 499,83 -> 499,87 -> 514,87 -> 514,83 -> 506,83 -> 506,81
489,22 -> 493,22
504,25 -> 508,25
518,147 -> 518,140 -> 518,147 -> 520,147 -> 520,138 -> 520,147 -> 522,147 -> 522,139 -> 522,147
531,131 -> 535,131
525,119 -> 525,122 -> 523,122 -> 523,125 -> 529,125 -> 529,122 -> 528,122 -> 528,119
535,160 -> 535,164 -> 529,164 -> 529,167 -> 544,167 -> 544,164 -> 539,164 -> 539,160
492,19 -> 496,19
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
483,43 -> 488,43
498,25 -> 502,25
534,134 -> 538,134
498,19 -> 502,19
506,54 -> 511,54
528,116 -> 528,114 -> 528,116 -> 530,116 -> 530,113 -> 530,116 -> 532,116 -> 532,112 -> 532,116 -> 534,116 -> 534,110 -> 534,116 -> 536,116 -> 536,113 -> 536,116
503,81 -> 503,83 -> 499,83 -> 499,87 -> 514,87 -> 514,83 -> 506,83 -> 506,81
503,81 -> 503,83 -> 499,83 -> 499,87 -> 514,87 -> 514,83 -> 506,83 -> 506,81
513,152 -> 531,152 -> 531,151
528,116 -> 528,114 -> 528,116 -> 530,116 -> 530,113 -> 530,116 -> 532,116 -> 532,112 -> 532,116 -> 534,116 -> 534,110 -> 534,116 -> 536,116 -> 536,113 -> 536,116
525,119 -> 525,122 -> 523,122 -> 523,125 -> 529,125 -> 529,122 -> 528,122 -> 528,119
518,63 -> 523,63
518,147 -> 518,140 -> 518,147 -> 520,147 -> 520,138 -> 520,147 -> 522,147 -> 522,139 -> 522,147
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
480,38 -> 480,31 -> 480,38 -> 482,38 -> 482,35 -> 482,38 -> 484,38 -> 484,35 -> 484,38 -> 486,38 -> 486,28 -> 486,38 -> 488,38 -> 488,36 -> 488,38
528,116 -> 528,114 -> 528,116 -> 530,116 -> 530,113 -> 530,116 -> 532,116 -> 532,112 -> 532,116 -> 534,116 -> 534,110 -> 534,116 -> 536,116 -> 536,113 -> 536,116
528,116 -> 528,114 -> 528,116 -> 530,116 -> 530,113 -> 530,116 -> 532,116 -> 532,112 -> 532,116 -> 534,116 -> 534,110 -> 534,116 -> 536,116 -> 536,113 -> 536,116
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
535,160 -> 535,164 -> 529,164 -> 529,167 -> 544,167 -> 544,164 -> 539,164 -> 539,160
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
491,47 -> 496,47
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
504,63 -> 509,63
518,147 -> 518,140 -> 518,147 -> 520,147 -> 520,138 -> 520,147 -> 522,147 -> 522,139 -> 522,147
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
525,119 -> 525,122 -> 523,122 -> 523,125 -> 529,125 -> 529,122 -> 528,122 -> 528,119
522,66 -> 527,66
503,81 -> 503,83 -> 499,83 -> 499,87 -> 514,87 -> 514,83 -> 506,83 -> 506,81
511,63 -> 516,63
535,160 -> 535,164 -> 529,164 -> 529,167 -> 544,167 -> 544,164 -> 539,164 -> 539,160
480,38 -> 480,31 -> 480,38 -> 482,38 -> 482,35 -> 482,38 -> 484,38 -> 484,35 -> 484,38 -> 486,38 -> 486,28 -> 486,38 -> 488,38 -> 488,36 -> 488,38
498,50 -> 498,51 -> 508,51 -> 508,50
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
503,81 -> 503,83 -> 499,83 -> 499,87 -> 514,87 -> 514,83 -> 506,83 -> 506,81
528,116 -> 528,114 -> 528,116 -> 530,116 -> 530,113 -> 530,116 -> 532,116 -> 532,112 -> 532,116 -> 534,116 -> 534,110 -> 534,116 -> 536,116 -> 536,113 -> 536,116
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
516,103 -> 516,102 -> 516,103 -> 518,103 -> 518,96 -> 518,103 -> 520,103 -> 520,97 -> 520,103 -> 522,103 -> 522,94 -> 522,103 -> 524,103 -> 524,99 -> 524,103 -> 526,103 -> 526,97 -> 526,103 -> 528,103 -> 528,96 -> 528,103 -> 530,103 -> 530,102 -> 530,103 -> 532,103 -> 532,94 -> 532,103
498,13 -> 502,13
503,57 -> 508,57
480,38 -> 480,31 -> 480,38 -> 482,38 -> 482,35 -> 482,38 -> 484,38 -> 484,35 -> 484,38 -> 486,38 -> 486,28 -> 486,38 -> 488,38 -> 488,36 -> 488,38
480,38 -> 480,31 -> 480,38 -> 482,38 -> 482,35 -> 482,38 -> 484,38 -> 484,35 -> 484,38 -> 486,38 -> 486,28 -> 486,38 -> 488,38 -> 488,36 -> 488,38
518,147 -> 518,140 -> 518,147 -> 520,147 -> 520,138 -> 520,147 -> 522,147 -> 522,139 -> 522,147
492,25 -> 496,25
480,38 -> 480,31 -> 480,38 -> 482,38 -> 482,35 -> 482,38 -> 484,38 -> 484,35 -> 484,38 -> 486,38 -> 486,28 -> 486,38 -> 488,38 -> 488,36 -> 488,38
528,116 -> 528,114 -> 528,116 -> 530,116 -> 530,113 -> 530,116 -> 532,116 -> 532,112 -> 532,116 -> 534,116 -> 534,110 -> 534,116 -> 536,116 -> 536,113 -> 536,116
497,69 -> 497,73 -> 489,73 -> 489,78 -> 504,78 -> 504,73 -> 501,73 -> 501,69
518,147 -> 518,140 -> 518,147 -> 520,147 -> 520,138 -> 520,147 -> 522,147 -> 522,139 -> 522,147
528,116 -> 528,114 -> 528,116 -> 530,116 -> 530,113 -> 530,116 -> 532,116 -> 532,112 -> 532,116 -> 534,116 -> 534,110 -> 534,116 -> 536,116 -> 536,113 -> 536,116
507,60 -> 512,60
523,157 -> 535,157 -> 535,156
528,128 -> 532,128`.split('\n');

console.log(part1(inputSample));
console.log(part1(inputReal));
console.log(part2(inputSample));
console.log(part2(inputReal));
